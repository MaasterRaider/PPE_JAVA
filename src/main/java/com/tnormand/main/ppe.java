/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tnormand.main;

import com.karimandco.admin.Modification;
import com.karimandco.auth.Utilisateur;
import com.karimandco.bdd.DaoSIO;
import com.karimandco.cv.ListeCV;
import com.karimandco.image.DialogChoisirImage;
import com.karimandco.pdf.DialogVoirPdf;
import com.tnormand.main.auth.DialogAdministration;
import com.tnormand.main.auth.DialogCreationCV;
import com.tnormand.main.auth.DialogFormConnexion;
import com.tnormand.main.auth.DialogFormInscription;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;

/**
 *
 * @author pawel
 */
public class ppe extends javax.swing.JFrame {

    public com.tnormand.main.auth.DialogFormConnexion cConnexion;
    public com.tnormand.main.auth.DialogFormInscription cInscription;
    public com.tnormand.main.auth.DialogAdministration cAdministration;
    public com.karimandco.admin.Modification cModification;
    public com.tnormand.main.auth.DialogCreationCV cCreationCV;
    public com.karimandco.cv.ListeCV cMesCV;
    public com.karimandco.image.DialogChoisirImage cImage;
    public com.karimandco.pdf.DialogVoirPdf cExportCV;

    /**
     * Creates new form NewJFrame
     */
    public ppe() {
        initComponents();
        updateInterface();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuCompte = new javax.swing.JMenu();
        jMenuItemConnexion = new javax.swing.JMenuItem();
        jMenuItemInscription = new javax.swing.JMenuItem();
        jMenuItemCompte = new javax.swing.JMenuItem();
        jMenuItemChangerPhoto = new javax.swing.JMenuItem();
        jMenuItemDeconnexion = new javax.swing.JMenuItem();
        jMenuCV = new javax.swing.JMenu();
        jMenuItemCreerCV = new javax.swing.JMenuItem();
        jMenuItemExportCV = new javax.swing.JMenuItem();
        jMenuAdministration = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenuCompte.setText("Compte");

        jMenuItemConnexion.setText("Connexion");
        jMenuItemConnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConnexionActionPerformed(evt);
            }
        });
        jMenuCompte.add(jMenuItemConnexion);

        jMenuItemInscription.setText("Inscription");
        jMenuItemInscription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemInscriptionActionPerformed(evt);
            }
        });
        jMenuCompte.add(jMenuItemInscription);

        jMenuItemCompte.setText("Mon compte");
        jMenuItemCompte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCompteActionPerformed(evt);
            }
        });
        jMenuCompte.add(jMenuItemCompte);

        jMenuItemChangerPhoto.setText("Changer ma photo");
        jMenuItemChangerPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemChangerPhotoActionPerformed(evt);
            }
        });
        jMenuCompte.add(jMenuItemChangerPhoto);

        jMenuItemDeconnexion.setText("Déconnexion");
        jMenuItemDeconnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeconnexionActionPerformed(evt);
            }
        });
        jMenuCompte.add(jMenuItemDeconnexion);

        jMenuBar1.add(jMenuCompte);

        jMenuCV.setText("CV");

        jMenuItemCreerCV.setText("Créer un CV");
        jMenuItemCreerCV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCreerCVActionPerformed(evt);
            }
        });
        jMenuCV.add(jMenuItemCreerCV);

        jMenuItemExportCV.setText("Export CV => PDF");
        jMenuItemExportCV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExportCVActionPerformed(evt);
            }
        });
        jMenuCV.add(jMenuItemExportCV);

        jMenuBar1.add(jMenuCV);

        jMenuAdministration.setText("Administration");
        jMenuAdministration.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuAdministrationMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuAdministration);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 658, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 373, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemConnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConnexionActionPerformed
        cConnexion = new DialogFormConnexion(this);
        cConnexion.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        cConnexion.getPanneauFormConnexionBanque1().getjButtonConfirmerConnexion().addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                if (cConnexion.getPanneauFormConnexionBanque1().getConnexionOK()) {
                    cConnexion.setVisible(false);
                    cConnexion.dispose();
                    Utilisateur.getInstance().chargerInformationsUtilisateur();
                    updateInterface();
                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
                // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseExited(MouseEvent e) {
                // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
        cConnexion.setLocationRelativeTo(this);
        cConnexion.setModal(true);
        cConnexion.setVisible(true);
    }//GEN-LAST:event_jMenuItemConnexionActionPerformed

    private void jMenuItemInscriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemInscriptionActionPerformed
        cInscription = new DialogFormInscription(this);
        cInscription.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        cInscription.getPanneauFormInscription1().getjButton1().addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                if (cInscription.getPanneauFormInscription1().getInscriptionOK()) {
                    cInscription.setVisible(false);
                    cInscription.dispose();
                    Utilisateur.getInstance().chargerInformationsUtilisateur();
                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
                // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseExited(MouseEvent e) {
                // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

        });
        cInscription.setLocationRelativeTo(this);
        cInscription.setModal(true);
        cInscription.setVisible(true);
    }//GEN-LAST:event_jMenuItemInscriptionActionPerformed

    private void jMenuItemDeconnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeconnexionActionPerformed
        Utilisateur.getInstance().setEstConnecte(false);
        updateInterface();
    }//GEN-LAST:event_jMenuItemDeconnexionActionPerformed

    private void jMenuAdministrationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuAdministrationMouseClicked
        cAdministration = new DialogAdministration(this);
        cAdministration.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        cAdministration.setLocationRelativeTo(this);
        cAdministration.setModal(true);
        cAdministration.setVisible(true);
    }//GEN-LAST:event_jMenuAdministrationMouseClicked

    private void jMenuItemCompteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCompteActionPerformed
        cModification = new Modification(this);
        cModification.getPanneauFormModification1().getPanneauNom().getChamp2().setText(Utilisateur.getInstance().getNom());
        cModification.getPanneauFormModification1().getPanneauPrenom().getChamp2().setText(Utilisateur.getInstance().getPrenom());
        cModification.getPanneauFormModification1().getPanneauIdentifiant().getChamp2().setText(Utilisateur.getIdentifiant());
        cModification.getPanneauFormModification1().getPanneauCourriel().getChamp2().setText(Utilisateur.getInstance().getCourriel());
        cModification.getPanneauFormModification1().getPanneauNumeroTelephone().getChamp2().setText(Utilisateur.getInstance().getNumeroTelephone());
        cModification.getPanneauFormModification1().getPanneauDateNaissance().getChamp2().setText(Utilisateur.getInstance().getDateNaissance());
        cModification.getPanneauFormModification1().updateJLabelEtat();
        cModification.getPanneauFormModification1().getjButton1().addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                if (cModification.getPanneauFormModification1().getModificationOK()) {
                    cModification.dispose();
                    cModification.setVisible(false);
                    Utilisateur.getInstance().chargerInformationsUtilisateur();

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseReleased(MouseEvent e) {
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseEntered(MouseEvent e) {
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseExited(MouseEvent e) {
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
        cModification.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        cModification.setLocationRelativeTo(this);
        cModification.setModal(true);
        cModification.setVisible(true);
    }//GEN-LAST:event_jMenuItemCompteActionPerformed

    private void jMenuItemCreerCVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCreerCVActionPerformed
        cCreationCV = new DialogCreationCV(this);
        cCreationCV.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        cCreationCV.getCreationDuCV1().setIdUtilisateur(Utilisateur.getInstance().getId());

        ResultSet lesResultats = DaoSIO.getInstance().requeteSelection("SELECT id FROM cv WHERE id_utilisateur='" + Utilisateur.getInstance().getId() + "'");
        List<Integer> idCVs = new ArrayList<>();
        try {
            while (lesResultats.next()) {
                idCVs.add(lesResultats.getInt("id"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(ppe.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (idCVs.size() > 0) {
            cCreationCV.getCreationDuCV1().setIdCV(idCVs.get(0));
        }
        cCreationCV.setLocationRelativeTo(this);
        cCreationCV.setModal(true);
        cCreationCV.setVisible(true);
    }//GEN-LAST:event_jMenuItemCreerCVActionPerformed

    private void jMenuItemChangerPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemChangerPhotoActionPerformed
        cImage = new DialogChoisirImage(this);
        cImage.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        cImage.setLocationRelativeTo(this);
        cImage.setModal(true);
        cImage.setVisible(true);
    }//GEN-LAST:event_jMenuItemChangerPhotoActionPerformed

    private void jMenuItemExportCVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExportCVActionPerformed
        cExportCV = new DialogVoirPdf(this);
        cExportCV.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        cExportCV.setLocationRelativeTo(this);
        cExportCV.setModal(true);
        cExportCV.setVisible(true);
    }//GEN-LAST:event_jMenuItemExportCVActionPerformed

    public void updateInterface() {
        if (Utilisateur.getInstance().getEstConnecte()) {
            jMenuItemCompte.setVisible(true);
            jMenuItemDeconnexion.setVisible(true);
            jMenuItemConnexion.setVisible(false);
            jMenuItemChangerPhoto.setVisible(true);
            jMenuItemInscription.setVisible(false);
            jMenuItemExportCV.setVisible(true);
            jMenuCV.setVisible(true);
            if (Utilisateur.getInstance().getStatut().equals(1)) {
                jMenuAdministration.setVisible(true);
            }
        } else {
            jMenuItemCompte.setVisible(false);
            jMenuItemDeconnexion.setVisible(false);
            jMenuItemConnexion.setVisible(true);
            jMenuItemChangerPhoto.setVisible(false);
            jMenuItemInscription.setVisible(true);
            jMenuItemExportCV.setVisible(false);
            jMenuCV.setVisible(false);
            jMenuAdministration.setVisible(false);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ppe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ppe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ppe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ppe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ppe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenuAdministration;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuCV;
    private javax.swing.JMenu jMenuCompte;
    private javax.swing.JMenuItem jMenuItemChangerPhoto;
    private javax.swing.JMenuItem jMenuItemCompte;
    private javax.swing.JMenuItem jMenuItemConnexion;
    private javax.swing.JMenuItem jMenuItemCreerCV;
    private javax.swing.JMenuItem jMenuItemDeconnexion;
    private javax.swing.JMenuItem jMenuItemExportCV;
    private javax.swing.JMenuItem jMenuItemInscription;
    // End of variables declaration//GEN-END:variables
}
